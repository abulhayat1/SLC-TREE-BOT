const { Command } = require('discord.js-commando');
const getUrls = require('get-urls');

//tree_role_id
const tree_role_10_30 =  "725966375482556476";
const tree_role_35_55 =  "725966696250212374";
const tree_role_60_90 =  "725966943772999722";
const tree_role_95_120 =  "725966702344404994";
const tree_role_no_role = "725965869649494016";
//global ping time role
const default_tree_Ping = "725979693345669131";
const submitted_channel_id = "725965608814116915";



module.exports = class SayCommand extends Command {
	constructor(client) {
		super(client, {
			name: 'host',
			aliases: ['tree', 'event'],
			group: 'tree',
			memberName: 'tree',
			description: 'host you tree session',
      guildOnly: true,
			args: [
				{
					key: 'tree_name',
					prompt: 'Step 1: What is the tree name ? (1/6)',
					type: 'string',
					validate: tree_name => {
						if (tree_name.length < 30) return true;
						return 'Message Content is above 200 characters';
					},
				},
				{
					key: 'Starting_Time',
					prompt: 'Step 2 :What Is The Starting Time? (2/6)',
					type: 'integer',
          validate: Starting_Time => {
						if (Starting_Time < 30 ) return true;
						return 'Starting Time Cant Be Greater Than 30 Minitues.';
					},
				},
				{
					key: 'duration',
					prompt: 'Step 3: What is the tree duration? (3/6)',
					type: 'integer',
          validate: duration => {
						if (duration < 125 ) return true;
						return 'The duration can not be greater than 125 minutes. try again.';
					},
				},
				{
					key: 'Link',
					prompt: 'Step 4: What is the link of your tree? (5/6)',
					type: 'string',
				},
				{
					key: 'extra_re',
					prompt: 'Step 5: Any additional remarks? (6/6)',
					type: 'string',
				},
			],
		});
	}

	/*
	async run(message, { tree_name }) {
		message.delete();
		return message.say(`${tree_name}`);
	}*/




	run(message, { tree_name, Starting_Time, duration, option, Link, extra_re }) {
		

    
  let error_link,error_code;
  let myURL,code;


  
  //getting url from link
  const aurl = getUrls(`${Link}`);
  const url = Array.from(aurl);
  //searching for token from url
  try{
	  myURL = new URL(url);
	  code = myURL.searchParams.get('token');
  }catch{
	  error_link = true;
  }	

  //find tree role from input
  let tree_role_duaration = tree_roles(duration);




    this.client.channels.cache.get('725965608814116915').send(


			`<@&${tree_role_duaration}>`+`<@&${default_tree_Ping}>`
	,

			{ embed: {
			  color: 0xecc71,
				title: '**' + `${tree_name}` + '**',
				author: {
			  name: message.member.user.tag,
			  icon_url: message.author.displayAvatarURL(),
				},
				description: 'Join me through the link or code in the forest(app).',
        thumbnail: {
			  url: 'https://i.imgur.com/Zhedowe.png',
				},
				fields: [
			  {
						name: '\u200b',
						value: '\u200b',
						inline: false,
			  },
			  {
						name: 'Starting In:',
						value: `${Starting_Time}m`,
						inline: true,
			  },
			  {
						name: 'Duration:',
						value: `${duration}m`,
						inline: true,
			  },
			  {
						name: 'Code:',
						value: `${code}`,
						inline: true,
			  },
			  {
						name: 'Link:',
						value:`${url}`,
						inline: false,
			  },
			  {
						name: 'Host',
						value: "<@" + message.member.user.id + ">",
						inline: true,
			  },
        {
						name: 'Additional Remarks',
						value: `${extra_re}`,
						inline: false,
			  },


				],
				timestamp: new Date(),
			  footer: {
					icon_url: this.client.user.displayAvatarURL(),
					text: 'Â© SLCBOT',
			  },
			},
			},
		) .then(message=>{message.react('725378361488179291');message.react('725378348821381170');});

  var msg = "Tree successfully submitted in" + " <#" + submitted_channel_id + ">" + " by " + "<@" + message.member.user.id + ">";
  message.channel.send(msg);
  


	}

  


};


function tree_roles(t) {
	if (t >= 10 && t <= 30){
	  return tree_role_10_30;
	}else if (t >= 35 && t <= 55){
		return tree_role_35_55;
	}else if (t >= 60 && t <= 90){
		return tree_role_60_90;
	}else if(t >= 95 && t <= 120){
		return tree_role_95_120 ;
	}else{
		return tree_role_no_role;
	}
  }